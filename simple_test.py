import asyncio
import aiomysql

async def test_connection():
    print("üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MySQL...")
    
    try:
        connection = await aiomysql.connect(
            host='turntable.proxy.rlwy.net',
            port=11725,
            user='root',
            password='obyRyMEAMtDgJsSxGkontTXPZzwJdtFR',
            db='railway',
            charset='utf8mb4'
        )
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        async with connection.cursor() as cursor:
            await cursor.execute("SELECT DATABASE()")
            db_name = await cursor.fetchone()
            print(f"üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {db_name[0]}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
            await cursor.execute("SHOW TABLES")
            tables = await cursor.fetchall()
            print(f"üìã –¢–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ: {len(tables)}")
            
            if tables:
                for table in tables:
                    print(f"  - {table[0]}")
            else:
                print("  –¢–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        connection.close()
        print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    asyncio.run(test_connection()) 